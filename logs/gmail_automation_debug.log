  "error": "invalid_grant",
  "error_description": "Token has been expired or revoked."
}
Truncated Cache Data: {'id': '18cf189a2e03a701', 'threadId': '18cf189a2e03a701', 'labelIds': ['IMPORTANT', 'Label_3', 'CATEGORY_UPDATES', 'INBOX'], 'snippet': 'Here&#39;s the receipt for your first payment. Hello, Wesley Allegre You set up automatic payments t...', 'payload': {'partId': '', 'mimeType': 'text/html', 'filename': '', 'headers': [{'name': 'Delivered-To', 'value': 'wesley.allegre@gmail.com'}, {'name': 'Received', 'value': 'by 2002:a59:1211:0:b0:443:c37e:7204 with SMTP id 17csp62359vqs;        Tue, 9 Jan 2024 20:02:58 -0800 (PST)'}, {'name': 'X-Google-Smtp-Source', 'value': 'AGHT+IGpwmvErFVKAN/NaI5y6gdumN9jU5TEmhHoeunB1OccsOiw7Kcz1nL4xuV5owsVZYLDzcz/'}, {'name': 'X-Received', 'value': 'by 2002:ac8:570a:0:b0:429:8777:5fff with SMTP id 10-20020ac8570a000000b0042987775fffmr578652qtw.7.1704859378285;        Tue, 09 Jan 2024 20:02:58 -0800 (PST)'}, {'name': 'ARC-Seal', 'value': 'i=1; a=rsa-sha256; t=1704859378; cv=none;        d=google.com; s=arc-20160816;        b=GjFYcuqwoFDsYr6EycBDazA8qB+TsQX/bwZ4MDoaGkvW95xkriHhWPfRT3E6iUEMwm         cqOyECEjIs06XKMfCdeF3su42IXhagPlESGEpaJEdJNXPiTt/z3plPMynfofuyQSLlKF         DWn1bGXWL/wMhbqtyb0PkE0psNv24+7VJHV07ajVd+Z6LligMwc+PtU01ljza4Og8wte         K1kryV9DA2c/rNv+JqGRO0suAVIovQeYTs6obLfiqj3Eiqc9D2MNSmACBVfHRkRWlAc5         9u2kMqMh/ir2OBkGwokzk8JGd44q+7Zcp0Yh8WXYRIKDo3/rgo8Wgb8ViIbHnY/UCXfX         A08g=='}, {'name': 'ARC-Message-Signature', 'value': 'i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;        h=amq-delivery-message-id:mime-version:from:to:subject         :pp-correlation-id:message-id:date:content-transfer-encoding         :dkim-signature;        bh=GdDrMlZ1O4AR4CNTLMVOU/jDbORCcButNMBHtXedpNs=;        fh=obYS/lAdpBEu6M7vFEiRHH21qqKPvHksIgzDAfhkTwY=;        b=yMACCnMDWCmW5bhDC4+m+ncQVxCgFXr0fW7hUWm9jJapO2TTr54b03b3IhNZb0dzWO         FJc0NUqXWrheTyelcwnTTbASq0knDc4o/RjGlNFxJKMsamJ2vKiiTQelab/9Uq+BxMyx         2ufpxCfynK1oxUdwoYVmJPxMHZRbi+NfISHTfJKyXapIU8Jon+IaVcyXTxMnBt6ae6Uw         sLg4u0Qk0pz3mDe7dKpkHxJKPtsdlYWk9wN8Fuh/0CPm9KjRW55Jf1tpwQNcP1znDFIZ         ME7roKUlwx55y+FPV2M3NNbjCTdGLHkOM7ggHuied5sYGi0BmX40njXwCTqsQ68qA0Oi         nPWQ=='}, {'name': 'ARC-Authentication-Results', 'value': 'i=1; mx.google.com;       dkim=pass header.i=@paypal.com header.s=pp-dkim1 header.b=Gqn4BvkQ;       spf=pass (google.com: domain of service@paypal.com designates 66.211.170.89 as permitted sender) smtp.mailfrom=service@paypal.com;       dmarc=pass (p=REJECT sp=REJECT dis=NONE) header.from=paypal.com'}, {'name': 'Return-Path', 'value': '<service@paypal.com>'}, {'name': 'Received', 'value': 'from mx3.phx.paypal.com (mx3.phx.paypal.com. [66.211.170.89])        by mx.google.com with ESMTPS id bb3-20020a05622a1b0300b00427e835ddc3si3184662qtb.208.2024.01.09.20.02.57        for <wesley.allegre@gmail.com>        (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);        Tue, 09 Jan 2024 20:02:58 -0800 (PST)'}, {'name': 'Received-SPF', 'value': 'pass (google.com: domain of service@paypal.com designates 66.211.170.89 as permitted sender) client-ip=66.211.170.89;'}, {'name': 'Authentication-Results', 'value': 'mx.google.com;       dkim=pass header.i=@paypal.com header.s=pp-dkim1 header.b=Gqn4BvkQ;       spf=pass (google.com: domain of service@paypal.com designates 66.211.170.89 as permitted sender) smtp.mailfrom=service@paypal.com;       dmarc=pass (p=REJECT sp=REJECT dis=NONE) header.from=paypal.com'}, {'name': 'DKIM-Signature', 'value': 'v=1; a=rsa-sha256; d=paypal.com; s=pp-dkim1; c=relaxed/relaxed; q=dns/txt; i=@paypal.com; t=1704859377; h=From:From:Subject:Date:To:MIME-Version:Content-Type; bh=GdDrMlZ1O4AR4CNTLMVOU/jDbORCcButNMBHtXedpNs=; b=Gqn4BvkQpnDboj9Gr9PzP86BJ0ql06wsCiqmKbELivFTnm7yVBG0E+sy6U7XTMjX QSy8sPCusb5Jrt2o3n64eWYMvb1wBxOV+dH+aaWVDPnlPXOW3Sy3YCVU4Wtcs59Y FrTesQ9/B6Elj1tTvtgZ+RHLonFEuPaAj2xZ4cd3Qqxty7FposydhkvU7uO8FTIC xF7xNi0doJrZJq4uQHysBDZL4bd7MfXKJDblmwJd52rfAFBprtmdP44ThuGTDyzM CCfuLWiH+L2D8uPriE2ry/TAyBdOUUxFg8+oXd8/VKCXzpwqlCn30PpQXvO24k0+ c9vYNOmoOlxX2OFtMRnASg==;'}, {'name': 'Content-Transfer-Encoding', 'value': 'quoted-printable'}, {'name': 'Content-Type', 'value': 'text/html; charset="UTF-8"'}, {'name': 'Date', 'value': 'Tue, 09 Jan 2024 20:02:57 -0800'}, {'name': 'Message-ID', 'value': '<65.63.04028.1F61E956@ccg01mail05>'}, {'name': 'X-PP-REQUESTED-TIME', 'value': '1704859371131'}, {'name': 'X-PP-Email-transmission-Id', 'value': '21995650-af6d-11ee-8dba-3cfdfef04774'}, {'name': 'PP-Correlation-Id', 'value': 'dc5eea0f0ea16'}, {'name': 'Subject', 'value': 'Review your new automatic payment setup for Publicidad Pienpi'}, {'name': 'X-MaxCode-Template', 'value': 'RT001425'}, {'name': 'To', 'value': 'Wesley Allegre <wesley.allegre@gmail.com>'}, {'name': 'From', 'value': '"service@paypal.com" <service@paypal.com>'}, {'name': 'X-Email-Type-Id', 'value': 'RT001425'}, {'name': 'MIME-Version', 'value': '1.0'}, {'name': 'X-PP-Priority', 'value': '0-none-false'}, {'name': 'AMQ-Delivery-Message-Id', 'value': 'nullval'}, {'name': 'X-XPT-XSL-Name', 'value': 'nullval'}], 'body': {'size': 53133, 'data': ''}}, 'sizeEstimate': 63188, 'historyId': '19193803', 'internalDate': '1704859377000'}
  "error": "invalid_grant",
  "error_description": "Bad Request"
}
  "error": "invalid_grant",
  "error_description": "Bad Request"
}





, date: 11/29/2024, 05:38 AM , sender: The Navigator <navigator@dollarflightclub.com>





" was modified with label "Travel", marked as read: "true" and removed from Inbox.
  "error": "invalid_grant",
  "error_description": "Token has been expired or revoked."
}







, date: 02/10/2025, 05:38 AM , sender: The Navigator <navigator@dollarflightclub.com>







" was modified with label "Travel", marked as read: "true" and removed from Inbox.






, date: 01/30/2025, 05:34 AM , sender: The Navigator <navigator@dollarflightclub.com>






" was modified with label "Travel", marked as read: "true" and removed from Inbox.
  "error": "invalid_grant",
  "error_description": "Bad Request"
}
2025-07-25 12:43:55,269 - DEBUG - Logging setup completed
2025-07-25 12:43:55,269 - INFO - ------------------------------------------------------------------------
2025-07-25 12:43:55,270 - DEBUG - Script started
2025-07-25 12:43:55,270 - INFO - Starting Gmail_Automation.
2025-07-25 12:43:55,271 - DEBUG - Attempting to load configuration from: c:\Users\Wesley Allegre\source\repos\GitHub\gmail_automation\gmail_config-final.json
2025-07-25 12:43:55,272 - DEBUG - Configuration loaded successfully.
2025-07-25 12:43:55,272 - DEBUG - Checking existence of 'c:\Users\Wesley Allegre\source\repos\GitHub\gmail_automation\client_secret_717954459613-8f8k3mc7diq2h6rtkujvrjc2cbq6plh7.apps.googleusercontent.com.json and c:\Users\Wesley Allegre\source\repos\GitHub\gmail_automation\last_run.txt.
2025-07-25 12:43:55,273 - DEBUG - Found client secret file: 'c:\Users\Wesley Allegre\source\repos\GitHub\gmail_automation\client_secret_717954459613-8f8k3mc7diq2h6rtkujvrjc2cbq6plh7.apps.googleusercontent.com.json'.
2025-07-25 12:43:55,273 - DEBUG - Found last run file: 'c:\Users\Wesley Allegre\source\repos\GitHub\gmail_automation\last_run.txt'.
2025-07-25 12:43:55,287 - INFO - Current Time: 07/25/2025, 12:43 PM PDT
2025-07-25 12:43:55,288 - DEBUG - Getting credentials.
2025-07-25 12:43:55,288 - DEBUG - Credential path: c:\Users\Wesley Allegre\source\repos\GitHub\gmail_automation\gmail-python-email.json
2025-07-25 12:43:55,288 - DEBUG - Checking existence of 'c:\Users\Wesley Allegre\source\repos\GitHub\gmail_automation\client_secret_717954459613-8f8k3mc7diq2h6rtkujvrjc2cbq6plh7.apps.googleusercontent.com.json and c:\Users\Wesley Allegre\source\repos\GitHub\gmail_automation\last_run.txt.
2025-07-25 12:43:55,289 - DEBUG - Found client secret file: 'c:\Users\Wesley Allegre\source\repos\GitHub\gmail_automation\client_secret_717954459613-8f8k3mc7diq2h6rtkujvrjc2cbq6plh7.apps.googleusercontent.com.json'.
2025-07-25 12:43:55,289 - DEBUG - Found last run file: 'c:\Users\Wesley Allegre\source\repos\GitHub\gmail_automation\last_run.txt'.
2025-07-25 12:43:55,304 - DEBUG - Refreshing credentials...
2025-07-25 12:43:55,305 - INFO - Refreshing access_token
2025-07-25 12:43:55,480 - INFO - Failed to retrieve access token: {
  "error": "invalid_grant",
  "error_description": "Bad Request"
}
2025-07-25 12:43:55,482 - ERROR - Failed to refresh token: invalid_grant: Bad Request. Re-initiating OAuth flow.
